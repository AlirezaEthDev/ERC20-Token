console.log(await myContractDeployed.methods.approve('0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc',  15000).send({from: '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC'}))
console.log(await myContractDeployed.methods.approve('0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC', '0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc',  15000).send({from: '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC'}))
console.log(await myContractDeployed.methods.transferFrom('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC', 15000).send({from: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}))
console.log(await myContractDeployed.methods.transfer('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', 15000).send({from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}))
const myContractDeployed = new web3.eth.Contract(contractABI, contractAddress);
const contractAddress = contractInstance.options.address
const contractInstance = await myContract.deploy({data: contractBytecode, arguments: [Buffer.from('Pugy', 'utf-8'), Buffer.from('PUGY','utf-8'), 18, 1000000]}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const myContract = new web3.eth.Contract(contractABI);
const contractABI = contractObject.abi;
const contractBytecode = contractObject.bytecode;
const contractObject=JSON.parse(fs.readFileSync("./artifacts/contracts/erc20.sol/ERC20.json"));
const deployerAccount = accounts[0];
const accounts = await web3.eth.getAccounts();
("ws://127.0.0.1:8545"))
const web3= new Web3(new Web3.providers.WebsocketProvider
const {Web3} = require('web3')
const fs = require('fs')
console.log(await myContractDeployed.methods.approve('0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65', 15000).send({from: '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC'}))
console.log(await myContractDeployed.methods.approve('0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC', 15000).send({from: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}))
console.log(await myContractDeployed.methods.transferFrom('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC',  15000).send({from: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}))
)
console.log(await myContractDeployed.methods.transfer('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', 15000).send({from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'})
console.log(await myContractDeployed.methods.balanceOf('0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266').call())
const myContractDeployed = new web3.eth.Contract(contractABI, contractAddress);
const contractAddress = contractInstance.options.address
const contractInstance = await myContract.deploy({data: contractBytecode, arguments: [Buffer.from('Pugy','utf-8'), Buffer.from('PUGY','utf-8'), 18, 10000000]}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const myContract = new web3.eth.Contract(contractABI);
const contractABI = contractObject.abi;
const contractBytecode = contractObject.bytecode;
const contractObject=JSON.parse(fs.readFileSync("./artifacts/contracts/erc20.sol/ERC20.json"));
const deployerAccount = accounts[0];
const accounts = await web3.eth.getAccounts();
const web3= new Web3(new Web3.providers.WebsocketProvider("ws://127.0.0.1:8545"));
const {Web3} = require('web3')
const fs = require('fs')
console.log(await PugyDeployed.methods.owner().call())
console.log(await PugyDeployed.methods.balanceOf('0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266').call())
console.log(await PugyDeployed.methods.transfer('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', 15000).send({from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}))
const PugyDeployed = new web3.eth.Contract(pugyABI, PugtAddr);
const PugtAddr = PugyDeploy.options.address
const PugyDeploy = await myPugy.deploy({data: contractBytecode, arguments: [Buffer.from('Pugy', 'utf-8'), Buffer.from('PUGY', 'utf-8'), 18, 1000000]}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const pugyDeploy = await myPugy.deploy({data: contractBytecode, arguments: [Buffer.from('Pugy', 'utf-8'), Buffer.from('PUGY', 'utf-8'), 18, 1000000]}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const pugyDeploy = await myPugy.deploy({data: contractBytecode, arguments: ['Pugy', 'PUGY', 18, 1000000]}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const pugyInstance = await myPugy.deploy({data: contractBytecode, arguments: ['Pugy', 'PUGY', 18, 1000000]}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const pugyInstance = await myPugy.deploy({data: contractBytecode, arguments: []}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const myPugy = new web3.eth.Contract(pugyABI);
const pugyABI = pugyObject.abi;
const pugyBytecode = pugyObject.bytecode
const pugyObject=JSON.parse(fs.readFileSync("./artifacts/contracts/erc20.sol/ERC20.json"));
const contractObject=JSON.parse(fs.readFileSync("./artifacts/contracts/erc20.sol/ERC20.json"));
console.log(await myContractDeployed.methods.maxValue().call())
const myContractDeployed = new web3.eth.Contract(contractABI, contractAddress);
const contractAddress = contractInstance.options.address
const contractInstance = await myContract.deploy({data: contractBytecode, arguments: []}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const myContract = new web3.eth.Contract(contractABI);
const contractABI = contractObject.abi;
const contractBytecode = contractObject.bytecode;
const contractObject=JSON.parse(fs.readFileSync("./artifacts/contracts/erc20.sol/ERC20.json"));
const deployerAccount = accounts[0];
const accounts = await web3.eth.getAccounts();
("ws://127.0.0.1:8545"))
const web3= new Web3(new Web3.providers.WebsocketProvider
const {Web3} = require('web3')
const fs = require('fs')
console.log(await pugy.methods.allowance('0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266', '0x90F79bf6EB2c4f870365E785982E1f101E93b906').call())
console.log(await pugy.methods.allowance('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', '0x90F79bf6EB2c4f870365E785982E1f101E93b906').call())
console.log(await pugy.methods.allowance('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', '0x90F79bf6EB2c4f870365E785982E1f101E93b906'))
console.log(await pugy.methods.transferFrom('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC', 300).send({from: '0x90F79bf6EB2c4f870365E785982E1f101E93b906'}))
console.log(await pugy.methods.approve('0x90F79bf6EB2c4f870365E785982E1f101E93b906',500).send({from: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}))
console.log(await pugy.methods.transferFrom('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC', 300).send({from: '0x90F79bf6EB2c4f870365E785982E1f101E93b906'}))
console.log(await pugy.methods.transferFrom('0x70997970C51812dc3A010C7d01b50e0d17dc79C8', '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC', 300).send({from: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8'}))
console.log(await pugy.methods.transfer('0x70997970C51812dc3A010C7d01b50e0d17dc79C8',1000000).send({from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}))
console.log(await pugy.methods.transfer('0x70997970C51812dc3A010C7d01b50e0d17dc79C8',1000).send({from: '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC'}))
console.log(await pugy.methods.balanceOf('0x70997970C51812dc3A010C7d01b50e0d17dc79C8').call())
console.log(await pugy.methods.balanceOf('0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266').call())
console.log(await pugy.methods.transfer('0x70997970C51812dc3A010C7d01b50e0d17dc79C8',1000).send({from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'}))
console.log(await pugy.methods.balanceOf('0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266').call())
console.log(await pugy.methods.balanceOf('0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'))
const pugy = new web3.eth.Contract(contractABI, contractAddress);
const contractAddress = contractDeploy.options.address
const contractDeploy = await myContract.deploy({data: contractBytecode, arguments: [Buffer.from('Pugy','utf-8'), Buffer.from('PUGY','utf-8'), 18, 1000000 ]}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const contractInstance = await myContract.deploy({data: contractBytecode, arguments: [Buffer.from('Pugy','utf-8'), Buffer.from('PUGY','utf-8'), 18, 1000000 ]}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const contractInstance = await myContract.deploy({data: contractBytecode, arguments: ['Pugy', 'PUGY', 18, 1000000 ]}).send({from: deployerAccount, gas: 1500000, gasPrice: '30000000000'});
const myContract = new web3.eth.Contract(contractABI);
const contractABI = contractObject.abi;
const contractBytecode = contractObject.bytecode;
const contractObject=JSON.parse(fs.readFileSync("./artifacts/contracts/erc20.sol/ERC20.json"));
const deployerAccount = accounts[0];
const accounts = await web3.eth.getAccounts();
const web3= new Web3(new Web3.providers.WebsocketProvider("ws://127.0.0.1:8545"))
const {Web3} = require('web3')
const fs = require('fs')